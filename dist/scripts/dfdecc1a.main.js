!function(){window.mystops={Models:{},Collections:{},Views:{},Routers:{},init:function(){this.Collections.routes=new this.Collections.RouteCollection,this.Collections.directions=new this.Collections.DirectionCollection,this.Collections.stops=new this.Collections.StopCollection,new mystops.Views.SelectView}}}(),function(){this.JST=this.JST||{},this.JST["app/scripts/templates/option.ejs"]=function(obj){obj||(obj={});var __t,__p="";with(_.escape,obj)__p+=(null==(__t=title)?"":__t)+"\n";return __p},this.JST["app/scripts/templates/select.ejs"]=function(obj){obj||(obj={});var __p="";with(_.escape,obj)__p+="<p>Your content here.</p>\n\n";return __p}}(),function(){mystops.Views.DirectionView=Backbone.View.extend({template:JST["app/scripts/templates/option.ejs"],tagName:"option",render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$el.val(this.model.get("tag")),this}})}(),function(){mystops.Views.RouteView=Backbone.View.extend({template:JST["app/scripts/templates/option.ejs"],tagName:"option",render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$el.val(this.model.get("tag")),this}})}(),function(){mystops.Views.SelectView=Backbone.View.extend({el:"body",events:{"change #routes":"selectDirection","change #directions":"selectStop"},initialize:function(){mystops.Collections.routes.fetch(),this.listenTo(mystops.Collections.routes,"add",this.showRoute),this.listenTo(mystops.Collections.directions,"sync",this.showDirections),this.listenTo(mystops.Collections.stops,"sync",this.showStops)},showAllRoutes:function(){mystops.Collections.routes.each(this.showRoute,this)},showRoute:function(a){var b=new mystops.Views.RouteView({model:a});$("#routes").append(b.render().el)},selectDirection:function(){var a=$("#routes option:selected").val();mystops.Collections.directions.fetch({data:{r:a}})},showDirections:function(){$("#directions").html("<option>Select a Direction</option>"),mystops.Collections.directions.each(function(a){var b=new mystops.Views.DirectionView({model:a});$("#directions").append(b.render().el)})},selectStop:function(){var a=$("#routes option:selected").val();mystops.Collections.stops.fetch({data:{r:a}})},showStops:function(){var a=$("#directions option:selected").val();$("#stops").html("<option>Select a Stop</option>"),mystops.Collections.stops.each(function(b){if(a===b.get("direction")){var c=new mystops.Views.StopView({model:b});$("#stops").append(c.render().el)}})}})}(),function(){mystops.Views.StopView=Backbone.View.extend({template:JST["app/scripts/templates/option.ejs"],tagName:"option",render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$el.val(this.model.get("tag")),this}})}(),function(){mystops.Models.DirectionModel=Backbone.Model.extend({})}(),function(){mystops.Models.RouteModel=Backbone.Model.extend({})}(),function(){mystops.Models.StopModel=Backbone.Model.extend({})}(),function(){mystops.Collections.DirectionCollection=Backbone.Collection.extend({model:mystops.Models.DirectionModel,url:"http://webservices.nextbus.com/service/publicXMLFeed?command=routeConfig&a=ttc",parse:function(a){var b=[];return $(a).find("direction").each(function(){var a=$(this).attr("title"),c=$(this).attr("tag");b.push({title:a,tag:c})}),b},fetch:function(a){a=a||{},a.dataType="xml",Backbone.Collection.prototype.fetch.call(this,a)}})}(),function(){mystops.Collections.RouteCollection=Backbone.Collection.extend({model:mystops.Models.RouteModel,url:"http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&a=ttc",parse:function(a){var b=[];return $(a).find("route").each(function(){var a=$(this).attr("tag"),c=$(this).attr("title");b.push({tag:a,title:c})}),b},fetch:function(a){a=a||{},a.dataType="xml",Backbone.Collection.prototype.fetch.call(this,a)}})}(),function(){mystops.Collections.StopCollection=Backbone.Collection.extend({model:mystops.Models.StopModel,url:"http://webservices.nextbus.com/service/publicXMLFeed?command=routeConfig&a=ttc",parse:function(a){var b=[],c={};return $(a).find("direction").each(function(){var a=$(this).attr("tag");c[a]=[],$(this).find("stop").each(function(b){dataTag=$(this).attr("tag"),c[a][b]=dataTag})}),$(a).find("route > stop").each(function(){var a=$(this).attr("tag"),d=$(this).attr("title"),e="";for(var f in c)c[f].indexOf(a)>-1&&(e=f);b.push({tag:a,title:d,direction:e})}),b},fetch:function(a){a=a||{},a.dataType="xml",Backbone.Collection.prototype.fetch.call(this,a)}})}(),function(){$(document).ready(function(){mystops.init()})}();
!function(){window.mystops={Models:{},Collections:{},Views:{},Routers:{},init:function(){this.Collections.routes=new this.Collections.RouteCollection,this.Collections.directions=new this.Collections.DirectionCollection,this.Collections.stops=new this.Collections.StopCollection,this.Collections.savedStops=new mystops.Collections.SavedStopCollection,new mystops.Views.UIView}},mystops.Routers.AppRouter=Backbone.Router.extend({routes:{"":"index",index:"index",select:"select"},index:function(){new mystops.Views.IndexView},select:function(){new mystops.Views.SelectView}})}(),function(){this.JST=this.JST||{}}(),function(){mystops.Views.DirectionView=Backbone.View.extend({template:_.template($("#option-template").html()),tagName:"option",render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$el.val(this.model.get("tag")),this}})}(),function(){mystops.Views.IndexView=Backbone.View.extend({el:"#mystops",initialize:function(){$("#select").hide(),this.$el.show(),this.listenTo(mystops.Collections.savedStops,"add",this.showSavedStop),this.listenTo(mystops.Collections.savedStops,"all",this.showAllSavedStops),mystops.Collections.savedStops.fetch()},showSavedStop:function(a){var b=new mystops.Views.SavedStopView({model:a});this.$el.append(b.render().el),this.getStopPrediction(a,b)},showAllSavedStops:function(){mystops.Collections.savedStops.length&&this.$el.html("");var a=this;mystops.Collections.savedStops.each(function(b){a.showSavedStop(b)})},getStopPrediction:function(a,b){var c=this,d=new mystops.Collections.PredictionCollection,e=a.get("routeTag"),f=a.get("stopTag");d.fetch({data:{r:e,s:f},success:function(){d.each(function(a){c.showPrediction(a,b)})}})},showPrediction:function(a,b){var c=new mystops.Views.PredictionView({model:a});b.$el.find("ul").append(c.render().el)}})}(),function(){mystops.Views.PredictionView=Backbone.View.extend({template:_.template($("#prediction-template").html()),tagName:"li",className:"list-group-item",render:function(){return this.$el.html(this.template(this.model.toJSON())),this}})}(),function(){mystops.Views.RouteView=Backbone.View.extend({template:_.template($("#option-template").html()),tagName:"option",render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$el.val(this.model.get("tag")),this}})}(),function(){mystops.Views.SavedStopView=Backbone.View.extend({template:_.template($("#saved-stop-template").html()),className:"saved-stop",events:{"click .delete":"clear","click .tag":"toggleEdit","click .save-tag":"saveTag"},render:function(){return this.$el.html(this.template(this.model.toJSON())),this},clear:function(){this.model.destroy()},toggleEdit:function(){this.$el.find(".edit-tag-input").toggle(),this.$el.find(".tag").toggle(),this.$el.find(".save-tag").toggle(),this.$el.find(".edit-tag").toggle()},saveTag:function(){var a=this.$el.find(".edit-tag-input").val().trim();this.model.save({tag:a})}})}(),function(){mystops.Views.SelectView=Backbone.View.extend({el:"#select",events:{"change #routes":"selectDirection","change #directions":"selectStop","click #add_stop":"addSavedStop"},initialize:function(){$("#mystops").hide(),this.$el.show(),this.listenTo(mystops.Collections.routes,"add",this.showRoute),this.listenTo(mystops.Collections.directions,"sync",this.showDirections),this.listenTo(mystops.Collections.stops,"sync",this.showStops),this.listenTo(mystops.Collections.savedStops,"all",this.showAllSavedStops),this.listenTo(mystops.Collections.savedStops,"add",this.resetForm),mystops.Collections.routes.fetch(),mystops.Collections.savedStops.fetch()},showAllRoutes:function(){mystops.Collections.routes.each(this.showRoute,this)},showRoute:function(a){var b=new mystops.Views.RouteView({model:a});$("#routes").append(b.render().el)},selectDirection:function(){var a=$("#routes option").not(function(){return!this.selected}).val();mystops.Collections.directions.fetch({data:{r:a}})},showDirections:function(){$("#directions").html("<option>Select a Direction</option>"),mystops.Collections.directions.each(function(a){var b=new mystops.Views.DirectionView({model:a});$("#directions").append(b.render().el)})},selectStop:function(){var a=$("#routes option").not(function(){return!this.selected}).val();mystops.Collections.stops.fetch({data:{r:a}})},showStops:function(){var a=$("#directions option").not(function(){return!this.selected}).val();$("#stops").html("<option>Select a Stop</option>"),mystops.Collections.stops.each(function(b){if(a===b.get("direction")){var c=new mystops.Views.StopView({model:b});$("#stops").append(c.render().el)}})},addSavedStop:function(){var a=$("#routes option").not(function(){return!this.selected}),b=$("#directions option").not(function(){return!this.selected}),c=$("#stops option").not(function(){return!this.selected}),d=new mystops.Models.SavedStopModel({routeTag:a.val(),directionTag:b.val(),stopTag:c.val(),routeName:a.text(),directionName:b.text(),stopName:c.text(),tag:""}),e=this.validate(d);e&&mystops.Collections.savedStops.create(d)},showAllSavedStops:function(){$("#saved_stops").html(""),mystops.Collections.savedStops.each(this.showSavedStop,this)},showSavedStop:function(a){var b=new mystops.Views.SavedStopView({model:a});$("#saved_stops").append(b.render().el)},validate:function(a){var b=$("#validation");return b.html(""),""===a.get("stopTag")||"Select a Stop"===a.get("stopTag")?(b.append("<li>Please select a stop</li>"),!1):mystops.Collections.savedStops.length>=5?(b.append("<li>Maximum of 5 stops my be selected</li>"),!1):this.isDuplicate(a)?(b.append("<li>You've already added that stop!</li>"),!1):!0},isDuplicate:function(a){var b=!1;return mystops.Collections.savedStops.each(function(c){a.get("stopTag")===c.get("stopTag")&&(b=!0)}),b},resetForm:function(){$("#routes option:first-child").prop("selected",!0),$("#directions option:first-child").prop("selected",!0),$("#stops option:first-child").prop("selected",!0)}})}(),function(){mystops.Views.StopView=Backbone.View.extend({template:_.template($("#option-template").html()),tagName:"option",render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$el.val(this.model.get("tag")),this}})}(),function(){mystops.Views.UIView=Backbone.View.extend({el:"body",events:{"click .nav-toggle":"toggleNav"},initialize:function(){},toggleNav:function(){this.$el.find(".app-nav-menu").slideToggle()}})}(),function(){mystops.Models.DirectionModel=Backbone.Model.extend({})}(),function(){mystops.Models.PredictionModel=Backbone.Model.extend({})}(),function(){mystops.Models.RouteModel=Backbone.Model.extend({})}(),function(){mystops.Models.SavedStopModel=Backbone.Model.extend({validate:function(a){return""===a.stopTag?"Needs Stop":void 0}})}(),function(){mystops.Models.StopModel=Backbone.Model.extend({})}(),function(){mystops.Collections.DirectionCollection=Backbone.Collection.extend({model:mystops.Models.DirectionModel,url:"http://webservices.nextbus.com/service/publicXMLFeed?command=routeConfig&a=ttc",parse:function(a){var b=[];return $(a).find("direction").each(function(){var a=$(this).attr("title"),c=$(this).attr("tag");b.push({title:a,tag:c})}),b},fetch:function(a){a=a||{},a.dataType="xml",Backbone.Collection.prototype.fetch.call(this,a)}})}(),function(){mystops.Collections.PredictionCollection=Backbone.Collection.extend({model:mystops.Models.PredictionModel,url:"http://webservices.nextbus.com/service/publicXMLFeed?command=predictions&a=ttc",comparator:function(a){return+a.get("minutes")},parse:function(a){var b=[];return $(a).find("direction").each(function(){var a=$(this).attr("title");$(this).find("prediction").each(function(){var c=$(this).attr("minutes");b.push({minutes:c,direction:a})})}),b},fetch:function(a){a=a||{},a.dataType="xml",Backbone.Collection.prototype.fetch.call(this,a)}})}(),function(){mystops.Collections.RouteCollection=Backbone.Collection.extend({model:mystops.Models.RouteModel,url:"http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&a=ttc",parse:function(a){var b=[];return $(a).find("route").each(function(){var a=$(this).attr("tag"),c=$(this).attr("title");b.push({tag:a,title:c})}),b},fetch:function(a){a=a||{},a.dataType="xml",Backbone.Collection.prototype.fetch.call(this,a)}})}(),function(){mystops.Collections.SavedStopCollection=Backbone.Collection.extend({model:mystops.Models.SavedStopModel,localStorage:new Backbone.LocalStorage("MyStops")})}(),function(){mystops.Collections.StopCollection=Backbone.Collection.extend({model:mystops.Models.StopModel,url:"http://webservices.nextbus.com/service/publicXMLFeed?command=routeConfig&a=ttc",parse:function(a){var b=[],c={};return $(a).find("direction").each(function(){var a=$(this).attr("tag");c[a]=[],$(this).find("stop").each(function(b){dataTag=$(this).attr("tag"),c[a][b]=dataTag})}),$(a).find("route > stop").each(function(){var a=$(this).attr("tag"),d=$(this).attr("title"),e="";for(var f in c)c[f].indexOf(a)>-1&&(e=f);b.push({tag:a,title:d,direction:e})}),b},fetch:function(a){a=a||{},a.dataType="xml",Backbone.Collection.prototype.fetch.call(this,a)}})}(),function(){$(document).ready(function(){mystops.init(),new mystops.Routers.AppRouter,Backbone.history.start()})}();